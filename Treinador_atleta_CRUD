class Treinador:
    def __init__(self, nome, idade, especializacao=None):
        self.nome = nome
        self.idade = idade
        self.especializacao = especializacao
    
    def __str__(self):
        return f"Treinador: {self.nome}, Idade: {self.idade}, Especialização: {self.especializacao}"


class Atleta:
    def __init__(self, nome, idade, modalidade, regime_treino):
        self.nome = nome
        self.idade = idade
        self.modalidade = modalidade
        self.regime_treino = regime_treino
    
    def __str__(self):
        return f"Atleta: {self.nome}, Idade: {self.idade}, Modalidade: {self.modalidade}, Regime de Treino: {self.regime_treino}"


class SistemaTreinadorAtletas:
    def __init__(self):
        self.treinadores = {}
        self.atletas = {}
        self.next_treinador_id = 1
        self.next_atleta_id = 1
    
    def cadastrar_treinador(self, nome, idade, especializacao=None):
        treinador = Treinador(nome, idade, especializacao)
        treinador_id = self.next_treinador_id
        self.treinadores[treinador_id] = treinador
        self.next_treinador_id += 1
        return treinador_id
    
    def listar_treinadores(self):
        for treinador_id, treinador in self.treinadores.items():
            print(f"ID: {treinador_id}, {treinador}")
    
    def buscar_treinador_por_id(self, treinador_id):
        return self.treinadores.get(treinador_id, None)
    
    def atualizar_treinador(self, treinador_id, nome=None, idade=None, especializacao=None):
        treinador = self.treinadores.get(treinador_id)
        if treinador:
            if nome:
                treinador.nome = nome
            if idade is not None:
                treinador.idade = idade
            if especializacao:
                treinador.especializacao = especializacao
            return True
        return False
    
    def excluir_treinador(self, treinador_id):
        return self.treinadores.pop(treinador_id, None) is not None
    
    def cadastrar_atleta(self, nome, idade, modalidade, regime_treino):
        atleta = Atleta(nome, idade, modalidade, regime_treino)
        atleta_id = self.next_atleta_id
        self.atletas[atleta_id] = atleta
        self.next_atleta_id += 1
        return atleta_id
    
    def listar_atletas(self):
        for atleta_id, atleta in self.atletas.items():
            print(f"ID: {atleta_id}, {atleta}")
    
    def buscar_atleta_por_id(self, atleta_id):
        return self.atletas.get(atleta_id, None)
    
    def atualizar_atleta(self, atleta_id, nome=None, idade=None, modalidade=None, regime_treino=None):
        atleta = self.atletas.get(atleta_id)
        if atleta:
            if nome:
                atleta.nome = nome
            if idade is not None:
                atleta.idade = idade
            if modalidade:
                atleta.modalidade = modalidade
            if regime_treino:
                atleta.regime_treino = regime_treino
            return True
        return False
    
    def excluir_atleta(self, atleta_id):
        return self.atletas.pop(atleta_id, None) is not None



def exibir_menu():
    print("\n=== Menu ===")
    print("1. Cadastrar um treinador")
    print("2. Atualizar um treinador")
    print("3. Excluir um treinador")
    print("4. Listar treinadores")
    print("5. Cadastrar um atleta")
    print("6. Atualizar um atleta")
    print("7. Excluir um atleta")
    print("8. Listar atletas")
    print("9. Sair do sistema")


def main():
    sistema = SistemaTreinadorAtletas()
    
    while True:
        exibir_menu()
        opcao = input("Escolha uma opção: ").strip()
        
        if opcao == '1':
            nome = input("Nome do treinador: ")
            idade = int(input("Idade do treinador: "))
            especializacao = input("Especialização (opcional): ") or None
            id_treinador = sistema.cadastrar_treinador(nome, idade, especializacao)
            print(f"Treinador cadastrado com ID: {id_treinador}")
        
        elif opcao == '2':
            id_treinador = int(input("ID do treinador a ser atualizado: "))
            nome = input("Novo nome (opcional): ") or None
            idade = input("Nova idade (opcional, deixe em branco para não alterar): ")
            idade = int(idade) if idade else None
            especializacao = input("Nova especialização (opcional): ") or None
            if sistema.atualizar_treinador(id_treinador, nome, idade, especializacao):
                print("Treinador atualizado com sucesso.")
            else:
                print("Treinador não encontrado.")
        
        elif opcao == '3':
            id_treinador = int(input("ID do treinador a ser excluído: "))
            if sistema.excluir_treinador(id_treinador):
                print("Treinador excluído com sucesso.")
            else:
                print("Treinador não encontrado.")
        
        elif opcao == '4':
            sistema.listar_treinadores()
        
        elif opcao == '5':
            nome = input("Nome do atleta: ")
            idade = int(input("Idade do atleta: "))
            modalidade = input("Modalidade: ")
            regime_treino = input("Regime de treino: ")
            id_atleta = sistema.cadastrar_atleta(nome, idade, modalidade, regime_treino)
            print(f"Atleta cadastrado com ID: {id_atleta}")
        
        elif opcao == '6':
            id_atleta = int(input("ID do atleta a ser atualizado: "))
            nome = input("Novo nome (opcional): ") or None
            idade = input("Nova idade (opcional, deixe em branco para não alterar): ")
            idade = int(idade) if idade else None
            modalidade = input("Nova modalidade (opcional): ") or None
            regime_treino = input("Novo regime de treino (opcional): ") or None
            if sistema.atualizar_atleta(id_atleta, nome, idade, modalidade, regime_treino):
                print("Atleta atualizado com sucesso.")
            else:
                print("Atleta não encontrado.")
        
        elif opcao == '7':
            id_atleta = int(input("ID do atleta a ser excluído: "))
            if sistema.excluir_atleta(id_atleta):
                print("Atleta excluído com sucesso.")
            else:
                print("Atleta não encontrado.")
        
        elif opcao == '8':
            sistema.listar_atletas()
        
        elif opcao == '9':
            print("Saindo do sistema...")
            break
        
        else:
            print("Opção inválida. Tente novamente.")

if __name__ == "__main__":
    main()
